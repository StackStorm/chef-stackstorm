#
# Cookbook Name:: stackstorm
# Recipe:: user
#
# Copyright (C) 2015 StackStorm (info@stackstorm.com)
#

# User recipe creates "stanley" user used for running local and remote actions.
# Commands invoked by StackStorm get stanley's privileges.
#

conf = node['stackstorm']['user']

user conf.user do
  home conf.home
  supports manage_home: true
  action :create
end

directory "creating #{conf.home}/.ssh directory for #{conf.user}" do
  path "#{conf.home}/.ssh"
  owner conf.user
  group conf.group
  mode 0700
  action :create
end

if conf.ssh_key.nil?
  # Ensure to generate ssh credentials if none is given.
  execute "generating ssh key-pair for #{conf.user}" do
    command "ssh-keygen -f #{conf.home}/.ssh/id_rsa -b #{conf.ssh_key_bits} -P ''"
    user conf.user
    group conf.group
    not_if { ::File.exist? "#{conf.home}/.ssh/id_rsa" }
    only_if { conf.ssh_key.nil? }
    action :run
  end
else
  # Write supplied credentials
  file "creating #{conf.home}/.ssh/id_rsa key #{conf.user}" do
    path "#{conf.home}/.ssh/id_rsa"
    mode 0640
    user conf.user
    group conf.group
    content(conf.ssh_key)
    action :create
  end

  file "creating #{conf.home}/.ssh/id_rsa public key for #{conf.user}" do
    path "#{conf.home}/.ssh/id_rsa.pub"
    user conf.user
    group conf.group
    content(conf.ssh_pub)
    only_if { conf.ssh_pub }
    action :create
  end
end

file "creating #{conf.home}/.ssh/authorized_keys for #{conf.user}" do
  path "#{conf.home}/.ssh/authorized_keys"
  owner conf.user
  group conf.group
  mode 0644

  content lazy {
    # We make it lazy, because we want self ssh login.
    # For example. It's usefull if we deloy a chef node and the clone it :)
    mypub = ::IO.read("#{conf.home}/.ssh/id_rsa.pub")
    pubkeys = node['stackstorm']['user']['authorized_keys'].dup
    pubkeys.unshift(mypub) unless pubkeys.include?(mypub)
    "# Generated by Chef. Don't edit!\n" << pubkeys.join("\n")
  }
  action :create
end

# sudo privileges for stanley
sudo conf.user do
  user conf.user
  nopasswd true
  only_if { conf.enable_sudo }
end
